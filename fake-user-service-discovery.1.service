[Unit]
Description=Fake User Service etcd registration

# Requirements
Requires=etcd.service
Requires=fake-user.1.service

# Dependency ordering and binding
After=etcd.service
After=fake-user-service.1.service
BindsTo=fake-user-service.1.service

[Service]

# Get CoreOS environmental variables
EnvironmentFile=/etc/environment

# Start
## Test whether service is accessible and then register useful information
ExecStart=/bin/bash -c '\
  while true; do \
    ADDR=${COREOS_PRIVATE_IPV4}:`docker port fake-user-service 80 | cut -d':' -f2` \
    curl -f $ADDR; \
    if [ $? -eq 0 ]; then \
      etcdctl set /services/$ADDR users \
    else \
      etcdctl rm /services/$ADDR; \
    fi; \
    sleep 20; \
  done'

# Stop
ExecStop=/usr/bin/etcdctl rm /services/${COREOS_PRIVATE_IPV4}:`docker port fake-user-service 80 | cut -d':' -f2`

[X-Fleet]
# Schedule on the same machine as the associated Apache service
X-ConditionMachineOf=fake-user-service.1.service